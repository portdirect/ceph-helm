apiVersion: v1
kind: ConfigMap
metadata:
  name: "ceph-key.py"
data:
  ceph-key.py: |
    #!/bin/python
    import os
    import struct
    import time
    import base64

    key = os.urandom(16)
    header = struct.pack(
        '<hiih',
        1,                 # le16 type: CEPH_CRYPTO_AES
        int(time.time()),  # le32 created: seconds
        0,                 # le32 created: nanoseconds,
        len(key),          # le16: len(key)
    )
    print(base64.b64encode(header + key).decode('ascii'))
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "ceph-keys.sh"
data:
  ceph-keys.sh: |
    function kube_base64 () {
      cat /secrets/$1 | base64 | tr -d '\n'
    }

    function indent_cat () {
      cat /secrets/$1 | sed 's/^/    /'
    }

    cat >> /dev/stdout <<EOF
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: "ceph-conf"
    data:
      ceph.conf: |
    $( indent_cat ceph.conf )
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: "ceph-client-admin-keyring"
    type: Opaque
    data:
      ceph.client.admin.keyring: |
        $( kube_base64 ceph.client.admin.keyring )
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: "ceph-mon-keyring"
    type: Opaque
    data:
      ceph.mon.keyring: |
        $( kube_base64 ceph.mon.keyring )
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: "ceph-bootstrap-rgw-keyring"
    type: Opaque
    data:
      ceph.keyring: |
        $( kube_base64 ceph.rgw.keyring )
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: "ceph-bootstrap-mds-keyring"
    type: Opaque
    data:
      ceph.keyring: |
        $( kube_base64 ceph.mds.keyring )
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: "ceph-bootstrap-osd-keyring"
    type: Opaque
    data:
      ceph.keyring: |
        $( kube_base64 ceph.osd.keyring )
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: "ceph-client-key"
    type: Opaque
    data:
      ceph-client-key: |
        $( kube_base64 ceph-client-key )
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: "pvc-ceph-conf-combined-storageclass"
    type: kubernetes.io/rbd
    data:
      key: |
        $( kube_base64 ceph-client-key )
    EOF
